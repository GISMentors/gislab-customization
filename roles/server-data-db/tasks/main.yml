# Create gismentors database

- name: Silence git warnings
  shell: git config --global --add safe.directory '*'

- name: Clone dataset repository
  git:
    repo: https://github.com/GISMentors/dataset.git
    dest: "{{ home_dir }}/dataset"

- name: Clone gislab customization repository
  git:
    repo: https://github.com/GISMentors/gislab-customization.git
    dest: "{{ home_dir }}/gislab-customization"

- name: Create template database
  postgresql_db:
    name: "{{ dbname_template }}"
    login_user: postgres
  register: db_template_created

- name: Add postgis extension to template database
  postgresql_ext:
    db: "{{ dbname_template }}"
    name: postgis

- name: Download EPSG 5514 code definiton
  get_url:
    url: https://epsg.io/5514-1623.sql
    dest: /tmp/5514-1623.sql 
  when:
    db_template_created.changed
    
- name: Drop existing EPSG 5514 definition
  shell: psql -U postgres "{{ dbname_template }}" -c "delete from spatial_ref_sys where srid = 5514"
  when:
    db_template_created.changed

- name: Insert new EPSG 5514 definition
  shell: psql -U postgres "{{ dbname_template }}" -f /tmp/5514-1623.sql
  when:
    db_template_created.changed

- name: Download gismentors dump
  get_url:
    url: "https://training.gismentors.eu/geodata/postgis/{{ dbname }}.dump"
    dest: "/mnt/repository/{{ dbname }}.dump"

- name: Create gismentors database
  postgresql_db:
    name: "{{ dbname }}"
    login_user: postgres
    template: "{{ dbname_template }}"
  register: db_created

- name: Import data into gismentors database
  shell: pg_restore "/mnt/repository/{{ dbname }}.dump" | psql -U postgres "{{ dbname }}"
  when:
    db_created.changed

- name: Grant privileges on gismentors database
  shell: "{{ home_dir }}/gislab-customization/utils/privileges.sh {{ dbname }}"
  when:
    db_created.changed

- name: Create data directory
  file:
    path: "{{ data_dir }}"
    state: directory
  register: gisdata

- name: Export data as Esri Shapefiles
  shell: "{{ home_dir }}/dataset/postgis/export_shp.sh {{ data_dir }}/shp"
  when: 
    gisdata.changed

- name: Export data as OGC GeoPackage
  shell: "{{ home_dir }}/dataset/postgis/export_gpkg.sh {{ data_dir }}/gpkg"
  when:
    gisdata.changed

- name: Change data files ownership
  file:
    path: "{{ item }}"
    owner: gislab
    group: gislabadmins
  with_items:
    - "/mnt/repository/{{ dbname }}.dump"

- name: Change data directories ownership
  file:
    path: "{{ item }}"
    owner: gislab
    group: gislabadmins
    recurse: yes
  with_items:
    - "{{ data_dir }}"
    - "{{ home_dir }}/dataset"
    - "{{ home_dir }}/gislab-customization"
